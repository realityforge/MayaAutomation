# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Workspace named so that BUILD.bazel files in other workspaces can reference this
# namespace with a fixed name.
workspace(name = "org_realityforge_maya")

load("//third_party/bazel_skylib:repository.bzl", _load_bazel_skylib_repository = "load_repository")

_load_bazel_skylib_repository()

load("//third_party/bazel_skylib:repository2.bzl", _configure_bazel_skylib_repository = "configure_repository")

_configure_bazel_skylib_repository()

load("//third_party/rules_python:repository.bzl", _load_rules_python_repository = "load_repository")

_load_rules_python_repository()

load("//third_party/go:repository.bzl", _load_go_repository = "load_repository")

_load_go_repository()

load("//third_party/buildifier:repository.bzl", _load_buildifier_repository = "load_repository")

_load_buildifier_repository()

load("//third_party/go:repository2.bzl", _configure_go_repository = "configure_repository")

_configure_go_repository()

load("//third_party/protobuf:repository.bzl", _load_protobuf_repository = "load_repository")

_load_protobuf_repository()

load("//third_party/protobuf:repository2.bzl", _configure_protobuf_repository = "configure_repository")

_configure_protobuf_repository()

load("//third_party/rules_python:repository2.bzl", _configure_rules_python_repository = "configure_repository")

_configure_rules_python_repository()

load("//third_party/maya_devkit:repository.bzl", _load_bazel_maya_devkit_repository = "load_repository")

_load_bazel_maya_devkit_repository()

load("//third_party/black:repository.bzl", _load_black_repository = "load_repository")

_load_black_repository()

load("//third_party/black:repository2.bzl", _configure_black_repository = "configure_repository")

_configure_black_repository()
